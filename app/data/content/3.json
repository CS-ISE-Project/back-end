{
    "url": "https://drive.google.com/file/d/1eimqNkzhTW2T1CdCGc8zBarMmN4MjF-r/view?usp=drive_link",
    "publication_date": "27-09-2021",
    "title": "ModelGame: A Quality Model for Gamified Software Modeling Learning",
    "authors": [
        "Ed Wilson J\u00fanior",
        "Kleinner Farias"
    ],
    "institutes": [
        "Universidade do Vale do Rio dos Sinos S\u00e3o Leopoldo, Rio Grande do Sul, Brazil",
        "Universidade do Vale do Rio dos Sinos S\u00e3o Leopoldo, Rio Grande do Sul, Brazil"
    ],
    "keywords": [
        "Model design",
        "learning model",
        "Gamification"
    ],
    "abstract": "Gamification has been adopted in software development tasks in recent years. This adoption seeks, for example, to improve the engagement of developers while creating UML models or writing code. Empirical studies report that UML models suffer from incompleteness and inconsistency problems. This study conjectures that gamification mechanics can improve learner engagement while learning software modeling, mitigating such problems concerning UML models. The current literature lacks studies that explore gamification and UML model quality in the context of software modeling learning. This article, therefore, proposes ModelGame, which is a quality model to support software modeling learning in a gamified way. It serves as a reference framework so that instructors can obtain a parameterized way to evaluate UML models created by learners. The quality of UML models can be improved by applying gamified activities and providing guidelines aware of quality issues.",
    "content": "introduction gamification has been adopted in software development tasks in recent this adoption for to improve the engagement of developers while creating uml models or writing empirical studies report that uml models suffer from incompleteness and inconsistency lange reinforces that these defects bring potential risks that can cause misinterpretation and communication representing a risk to software finding formats that favor student learning and consequently in generating increasingly effective uml models can become one of the main challenges faced by instructors that include uml modeling as part of software modeling some studies sought to understand how to apply gamification in software modeling teaching using some elements such as emblems and instructors and researchers still find limitations when and measuring the use of this tool in the learning of software modeling students in the models developed by since in the current literature there is no frame of reference that guides this study conjectures that gamification mechanics can improve learner engagement while learning software mitigating such problems concerning uml the current literature lacks studies that explore gamification and model quality in the context of software modeling this introduces which is a quality model to support software modeling learning in a gamified it serves as a reference framework so that instructors can obtain a parameterized way to evaluate uml models created by the quality of uml models can be improved by applying gamified activities and providing guidelines aware of quality a reference framework would help to establish parameters for evaluating uml models created by provide guidelines to improve the quality of these to analyze which elements of gamification could be included in each of the phases of modeling using identify intrinsic and extrinsic aspects of students during the modeling to improve the to compare validated theories about the inclusion of gamification in software modeling taking into account the types of learning and methodologies and contributing to the identification of gamification use objectives in modeling a qualitative questionnaire was answered by instructors who teach software modeling at higher education the results show that recognize that the proposed model can improve the quality of uml indicating that they would adopt it in their learning and do not use any sbcars september brazil ed wilson j\u00fanior and kleinner farias gamification mechanics in their these results are showing the potential for applying and improving the teaching and learning of software the remainder of the paper is organized as section presents the main concepts discussed throughout the tion discusses the related highlighting research section introduces the proposed quality section presents how the quality model was section points out some threats to section presents some concluding remarks and future background this section presents the essential concepts for understanding this including gamification and software engineering teaching and software modeling and model quality gamification and software engineering teaching gamification aims to use game elements in the context of not game bringing all positive aspects they provide as a way to encourage and engage thereby broadening their werbach classifies gamification into three and dynamicsinclude all game aspects related to the emotional responses of and offer elements that promote the action of a game usually elaborated via a development so that the player can interact with such and components represent the aesthetic elements of whose goal is to present visual aspects with which players can perform the for and emblems knowing that the teaching of software engineering should volve students to experience the professional practices of the area so that they can understand which practices and techniques are useful in several different situations the challenges of teaching new software engineers are not limited to learning but also include paying attention to considering the quality of created established schedule and defined budgets in addition to understanding the technical these future professionals must be up to date with nontechnical including communication and to meet these new demands of the current the format with exhibition classes is no longer considered enough and may even become demotivating and ineffective in learning in this gamification has been increasingly used in the ing of software engineering as a way to promote behavioral and psychological changes providing an environment that favors achievement and other recurring elements that are capable of improving efficiency and engagement in educational activities and can for the learning of software software modeling and model quality software modeling encompasses the set of and practices that lead to the development of a system or the principles of this activity establish a philosophy that guides the entire software development in this uml models play a crucial role in software development for documenting project understanding development promoting better tion between and generating greater efficiency in software development these models suffer problems of consistency and incompleteness as well as end up being overlooked within the modeling as pointed out in some empirical studies in the literature class and sequence for present inconsistencies when sequence diagram objects are not found in the class consequently developers end up living with inconsistencies throughout the development a research challenge still open is how to evaluate these both in industry and in the teaching in terms of such as syntactic and for related work the selection of related works was carried out following two search in digital such as google scholar and scopus of articles related to quality and modeling and filter selected articles considering the alignment of such works with the objective of the work after selecting the they were analyzed and compared seeking to identify research analysis of related works porto et this work performed a systematic ping with the objective of characterizing how gamification has been adopted in noneducational contexts of software engineering the main results of this study show that gamification provided benefits for activities such as requirements project and support in he pointed out that the number of publications and new research initiatives has increased over the many tive results have been achieved in software engineering the study reinforced that gamification can still be explored for other tasks in this as empirical evidence is very marin it performed the application of gamification on some topics of a software engineering course to engage students and increase their motivation and argued with due students can better exercise the topics and obtain more solid there were five games related to risk bpmn scrum design and inspection of class and cosmic functional size measurement to assist in the learning process of the software engineering this study also presented the lessons learned about the application of gamification and serious games in software including limitations or jurgelaitis et this work conducted a research to investigate how gamification could be inserted into an information systems modeling which covers a range of topics on as a an implementation of the gamified system modeling course in the moodle environment was using additional a quality model for gamified software modeling learning sbcars september brazil plugins for the use of the necessary gamified the study showed good results and obtained a positive acceptance by the participating rodrigues et they investigated the use of games and game elements in software engineering through a research that had the participation of instructors of this the results showed that most instructors are aware of these educational the games were adopted by only participants and game elements were adopted only by games are most often used to cover and the most commonly used game elements are and the results also show that the main sons for not adopting the resources are the lack of information about games relevant to the engineering of teaching and the lack of time to plan and include these approaches in the cosentino et they present a proach to learning modeling in a gamified the approach cludes a new language to model the gamification process itself and an environment where it can be incorporated into current eling tools to allow instructors and students to design and use a complete modeling including gamification in the approach also had as a proposal to provide support to collect and analyze gamification thus facilitating monitoring yohannis this research presents an exploration of game design as an approach to strengthening the tery in software modeling by developing their abstraction it brought together concepts of gamification such as the lens of atoms of intrinsic skill and principles of pedagogical design of various theories and models of the research follows the design science research methodology and explores the best practices of model oriented as a a modeling game design framework and generation structure and a series of produced games are pedreira et they developed a systematic ping of gamification in software engineering based on the mapping revealed that software implementation is the area in which most studies followed by software few others in different such as project planning and software and even to a lesser extent in activities involving software the highlight of this work was to highlight that gamification in software engineering is still at a very early stage and the evidence on its impact in this field remains comparative analysis and opportunities five comparison criteria were defined selecting the most vant variables to assist in the process of identifying similarities and differences between the proposed work and the selected this comparison is crucial to make the process of identifying search opportunities using objective rather than subjective the criteria are described context works that explore the use of gamification in software modeling participant profile studies that collected data from participants for screening and profile applicability of gamification in uml studies that evaluated how gamification can contribute to uml model creation studies that have developed a model to improve factors that imply the of instructor participation studies that collected qualitative data through the participation of software eling table shows the comparison of the selected confronting this some gaps and research opportunities are only the proposed work was the only one to fully meet all ison although most of them targeted the application of gamification in software modeling they were not rected to the use of no study has developed a model to evaluate the learning and improvement of uml models developed by and most of them did not have the participation of instructors to identify the difficulties and opportunities in the application of gamification in the teaching of software the next section presents a quality model to explore these identified related work comparison criterion proposed work porto et al marin jurgelaitis et al rodrigues et al cosentino et al yohannis pedreira et al completely meets partially meets does not attend table comparative analysis of the selected related works proposed quality model this section presents the proposed quality model to support ware modeling learning in a gamified it serves as a frame of reference so that instructors can evaluate the uml models ated by students through gamified section presents a proposal of a generic analytical section details the abstract syntax of the proposed quality section plains the quality notions related to the gamified software modeling generic analytical framework figure presents the generic analytical framework for improving the quality of the models and serves as the basis for the creation of an evaluation the arrows labeled as evaluation and gamified represent the questions that the evidence must dotted lines represent rectangles resent the models or the quality states by which these bindings are ellipses represent the adverse effects that can be generated from the evaluation and use of the numbers refer to the key questions and are connected with the concepts and relationships of the abstract syntax of the quality sbcars september brazil ed wilson j\u00fanior and kleinner farias figure generic analytical framework for gamified software modeling model in section as are there tools that assist instructors in evaluating the models developed by thus reducing the poor quality and incompleteness of these what is the prevalence of characteristics that cause models to be at are there notions of quality to evaluate the models as a way to define parameters when performing their applying the use of gamification in models that need intervention would be a way to identify factors that could generate models with high quality does the application of gamification improve the quality of the how are the models without gamification evaluated in relation to those with are there reasons to expect that gamification models can have better quality results than those that are ated without is the output model really effective when associated with reducing the poor quality of the does the absence of evaluation result in adverse is the evaluation acceptable for the what are the potential and how often do they does gamification result in adverse effects on fact is that it is not enough just to include this in the uml learning it is necessary to provide the instructor with a model that can serve as a reference to evaluate the quality of diagrams elaborated through gamified for the instructor could create models predefining inconsistencies by making use of these questions raised to evaluate the models created by the the set of questions serves as the starting point for this knowing that the adaptation of the gamification approach requires a significant effort in this study we present the modelgame as a way to identify factors that contribute to the quality of these artifacts to the abstract syntax following the specification pattern of the uml figure presents the abstract syntax of the proposed quality model for gamified software modeling learning it identifies the main concepts and the numbers represent the notions of quality that are discussed in section the following are detailed each of these concepts and the first concept presented in this study is the which corresponds to a specific context of the application to be developed to solve the in this the design template represents the solution given to the association each contextualise refers to the domain that will serve as the basis for the challenges this concept represents the phase in which the problem is contextualized as well as what will be the and other elements presented to the in this case the who must use the principles of software engineering to perform the modeling and reach the final association design each influence represents that the proposed challenge interfered in aspects of the design causing the user to seek to make a continuous modeling software modeling is an important step for development to happen in a way that adheres to the ments established by the for there is the modeling which offers a standardized way to document and design through the use of modeling it is possible to achieve a high level of understanding about the software in improving the communication between all those involved in the thus avoiding implementation it points out that software engineers use these languages to communicate design decisions and verify the feasibility of implementing the intended the uml was consolidated as the modeling language in the paradigm of object in which it is possible through visual notation generated from the presented later in this study as design to perform the representation of various perspectives of the association a quality model for gamified software modeling learning sbcars september brazil figure abstract quality model design performs the representation of the intended design in which the modeling language should be applicable to the domain this concept corresponds to the individual who performs the interpretation of the developed design whose objective is to be able to understand the domain in in the gamified the user has the role of player and it is he who performs the whole being able to perform the interpretation of isting models or even creating new the user can also identify and resolve inconsistencies that arise from compositions between association design represents the process in which the user creates a design which can be one or design in this the user performs the interpretation of the design when interpreting the paths for the resolution of inconsistencies can be inconsistency represents the discovery of design model for those that are generated from identifying whether a class is abstract or inconsistency each resolves equates to the resolution representation of the sistencies by the user that happens after he analyzes and determines the best alternative to perform this modeling tools determines that the user can use modeling tools to design association without a directed modeling this concept represents the applications that are used to carry out the construction of design there are several tools online and and it is up to the user to choose the one that will best meet their needs and adapt to the context in that they work in any domain that is being design the design model refers to a visual notation to represent static and dynamic these models are built according to a specific objective or task and tend to facilitate the logical interpretation of the software in several the most popular diagrams are use cases and the first being static and representing a set of actions generated from functional requirements and presenting the interactions generated with external users the second is a static diagram and makes the representation of the logical structure of the software involving the their and relationships between them association each describes makes the representation of a specific domain and means that every design model must describe it corresponds to the defects found in the models developed by they may occur because of the cation and correction of possible conflicts and even an erroneous association design this association indicates that with each occurrence of the a problem is presented harming the quality of the design sbcars september brazil ed wilson j\u00fanior and kleinner farias this concept represents one of the most used game chanics in software engineering and functions as a quantitative reward for each action in which it is possible to regulate the number of rewarded points of the defined here as based on the importance of each through this it is possible to stimulate and creativity among stimulating points appear as a derivation of the association since when each inconsistency error is identified or the user will receive a score and the association because the points will also be applied when making connections between the model and the the concept of progress emerges as a factor that makes the user able to perceive its evolution in the in this software progress emerges as a derivation of the tion making the user know when they have performed a correct interpretation of the proposed design model or what still needs to be feedback has the role of making the user realize that the proposed goal can be achieved and follow its ing analyzing how to change or creating new strategies to achieve the this concept emerges as a derivation between the tions it causing the user to receive a return to the model creation quality notions as discussed in section gamification can bring important ments for learning software modeling the objective of this section is to produce the notions of quality of the model of this the modelgame is composed of ten four of which are proposed in this study motivational and gagement extracted from the main benefits that the gamification elements presented in figure can bring to the the others are adaptations of previous works they detection and scope quality it seeks to determine how much the proposed challenge is contextualized with the design as well as the inition of the behaviors and attitudes that will be developed throughout the syntactic quality this notion makes the representation of the process of correction of the design models that are produced by the modeling because if it is not used sistencies will it is important to insert this notion of quality into our since during the process of developing the users may come across the composition of two class for semantic quality it is necessary to verify that the design model and the problem domain so this notion performs this type of communication problems may occur between users if the semantic elements of the model are social quality design models are used to communicate between members of a team to inform all established decisions about software development if divergent interpretations this communication will be greatly quality of effort this notion refers to the production lenges of the model that will be including factors such as time and quality of use to produce design users can use unusual tools such as and most of the time they choose to use formal tools and can be online or this notion corresponds to the level of ease and applicability of the models elaborated when making use of these it is also important to contribute to communication between users through detection quality this notion is referenced to the process of locating since when users they should perform traceability of them if the detection is it could hinder the process of correcting the resolution quality it corresponds to the level of quality related to the effort that users take to look for alternatives to solve the identified motivational quality this notion refers to the tional factors involved during the learning and development of design which can be intrinsic and elements of gamification such as feedback and progress bring the user a degree of satisfaction in continuing their discovery and mations throughout the quality of engagement the user in tracking their progress can feel committed to the objective in and this notion represents the measurement of the level of commitment of them during the development of design evaluation this section describes the methodology followed to evaluate the proposed quality this methodology follows empirical guidelines section details the objective and search questions section presents the questionnaire lated to evaluate the proposed quality section explains the context and selection of section describes the presentation of the section presents the analysis of the collected objective and research questions the objective of this study is introduce game as a tool for teaching software and analyze the applicability of the quality model regarding the improvement of uml to analyze the different facets of the two research questions have been how do instructors evaluate the use of gamification in software what is the acceptance of modelgame by software modeling questionnaire data was collected through an online questionnaire created through google following guidelines described in this strategy was chosen because the questionnaire could be applied quickly and easily collect data from individuals in graphically diverse the questions of the questionnaire a quality model for gamified software modeling learning sbcars september brazil were concerned with examining the research gaps of previous ies and apprehending the structures of the previously developed part participant the first part of the questionnaire consisted of collecting data that are related to the characteristics and opinions of the the creation of the participant profile through this data is important to make the selection of possible users of without this participants with an inadequate profile may generate inconsistent participants were asked to provide more general such as education academic information about the time of experience in teaching was also including teaching software modeling and level of knowledge about uml part tam the second part addressed tions about the usability and acceptance of the aiming to explore to this this part of our questionnaire is based on the technology acceptance model this part contained nine which were answered through the likert cluding totally partially partially and totally the questions formulated dealt with eral including perceived ease of use perceived utility attitude towards use and behavioral intention to use selection of participants the participants were selected based on the following structors professionals working in the teaching of software modeling in higher education institutions in using this we sought to select participants with academic training and practical experience in this finite set of all possible participants represents the target population this tion represents those people who are in a position to answer the questions formulated and to whom the results of the survey apply in people answered the the pants were invited via to participate in the study and each of them previously received the about the model proposed through the researcher and there was no they could leave for the next step that consisted of completing the tam we discussed the experimental process in the next experimental process figure presents the experimental process used in this which is composed of three phases discussed phase it has an in which the researcher explained to the participants through a video detail about the quality this process took place individually and in a standard where space was also made available for ticipants to answer possible doubts about the proposed study and lasting an average of phase application of the tam it has two the first being collect demographic the participants answered a list of questions so that we could collect their characteristics and opinions about the the graphic data collected became the result of this the second activity apply tam questionnaire participants received a list of questions about the perception of ease of ceived and intention of in relation to the qualitative data were regarding the usability and acceptance of the model under the perspective of professionals who teach software this questionnaire followed the guidelines of the tam phase analysis and result it has two the analyze data sought to perform a thorough analysis of the data collected through the questionnaire and the perception regarding the doubts during the presentation for the collected data were analyzed as well as aiming to perform a triangulation of there was an evaluation as a way to understand in a more depth the the perceptions of the participants in relation to the proposed model as well as its figure the experimental result analysis profile data of the table describes the profile reporting the characteristics and opinions of the these data were collected from may to june in we had our participants are between and years most of them have a degree in computer science information systems or systems analysis and are specialists masters and doctors about the working time in the majority they have been ing for more than years and teach disciplines related to software including software systems analysis and software a total of have a full level of knowledge about uml and almost half of them has not yet used cation in the teaching of software we consider sbcars september brazil ed wilson j\u00fanior and kleinner farias totally agree partially agree neutral partially disagree totally disagree perceived ease of use i found the quality model easy to use i found the quality model easy to learn i found the quality model easy to master perceived usefulness the model would make it easier to understand which elements of gamification can be used in modeling using the quality model would help increase the model would provide an understanding of how to mitigate the incompleteness of uml the model would help compare theories about gamification in software modeling attitude towards use using the quality model for gamified software modeling learning is a good behavioral intention to use i would use the quality model in software modeling table collected data related to tam that although our sample is adequate to carry out an initial evaluation of the proposed characteristic and opinion answer age years years years years years education others undergraduate course information systems computer science computer engineering system analysis others time of experience in teaching years years years years years experience in teaching years software modeling years years years years level of knowledge beginner about uml models junior full senior used gamification in teaching yes no maybe gamification can contribute to the quality totally agree of the models of uml diagrams generated partially agree by students neutral partially disagree totally disagree table the profile data of the how do instructors evaluate the use of gamification in software table presents the collected data related to the rq we begin the analysis by verifying how instructors visualize gamification in software modeling although most of them have not yet used gamification elements among in their most totally agree and partially agree that the use of these can contribute to the quality of the models developed by the we consider the percentage of instructors who have not yet used gamification in their classes to be high and this may be tied to factors such as lack of information about the and even time to plan and include these approaches although they were based on software modeling teaching previous studies they did not count on the participation of instructors and we understand that this participation is fundamental to understand the perceptions of these professionals since they will be at the forefront of the use of the modelgame proposed in this study could help them insert gamification into their according to the software modeling learning design based on the assumption that for it is necessary to develop a better understanding of the skills and operations that the different elements of gamification can offer and how they can correspond to the desired learning outcomes by developing a more concrete and motivating presentation that can involve students and facilitate deep learning with what is the acceptance of the modelgame by software modeling using the tam we tried to evaluate the ease of perceived and ioral intention to use the quality table shows the data our data obtained show that no one disagreed that the modelgame is easy to and on the most of participants find the model easy to use totally agree and partially agrees and learn a quality model for gamified software modeling learning sbcars september brazil fully agree and partially and master fully partially agree and partially the results are also favorable considering the perception of most participants realized that the modelgame would make it easier to understand which elements of gamification can be used in each of the phases of modeling using totally partially agree and increase productivity fully partially agree and and the use of the quality model would provide an understanding of how to mitigate the incompleteness of uml diagrams agree totalmen partially neutral and partially still in the useful we tried to know if the quality model would help to compare validated theories about the inclusion of gamification in software modeling teaching totally partially agree and considering the attitude towards participants believe that using the modelgame is a good idea totally partially agree and just as they are confident and would use the model in software modeling classes totally partially agree and these findings show the potential for acceptance by people with profiles similar to those of the results are encouraging and show the potential to use the proposed approach in the educational threats to validity this section discusses the possible threats to the validity of the internal the main point affecting the internal validity of our study concerns the total time used for the exploratory to mitigate this we performed the video recording of a pilot explaining the operating details and objectives of the in relation to the methods the threats related to internal validity relate to how we extract the perceptions of the discussions and whether they represent the perceptions of teachers about the use of the we try to reduce this threat by applying the tam external we identified threats related to external such as the number of participants who never applied the use of this study was limited to participants from various educational of which never used any element of gamification in their this factor can interfere in the since the model intends to evaluate the quality of uml diagrams from gamified conclusion threats related to the validity of the clusion are related to treatment and we try to make the reduction by combining quantitative and qualitative data through different these data were obtained through audio and we analyze this data to answer the research conclusions and future work this study proposed an initial quality model that serves as a reference framework for instructors for qualitative uations of uml models developed from gamified the application of an empirical study with participants was carried out to understand their vision in relation to gamification and the acceptance of the proposed it was identified that most have not yet used gamification in their but agree that their use can contribute to the quality of the models developed by the dents and were open to using the our findings can enhance the adoption of new teaching practices through ing in the improvement of software modeling learning using and consequently the creation of models developed by these approaches can stimulate immersion in the design of systems as future professionals during we hope to carry out in the future a series of experimental studies to analyze each stage of application of the modelgame and that this work represents a first step to better support the application of empirical studies on models of evaluation of the use of gamification in software we also hope that the questions described throughout the article will encourage other researchers to extend our study to different modeling languages and teaching",
    "references": [
        "[1] Rick Adcock, Edward Alef, Bruce Amato, Mark Ardis, Larry Bernstein, Barry Boehm, Pierre Bourque, John Brackett, Murray Cantor, Lillian Cassel, et al. 2009. Curriculum guidelines for graduate degree programs in software engineering. ACM. ",
        "[2] Mark Ardis, David Budgen, Gregory W Hislop, Jeff Offutt, Mark Sebern, and Willem Visser. 2015. SE 2014: Curriculum guidelines for undergraduate degree programs in software engineering. Computer 48, 11 (2015), 106\u2013109. ",
        "[3] Valerio Cosentino, S\u00e9bastien G\u00e9rard, and Jordi Cabot Sagrera. 2017. A model- based approach to gamify the learning of modeling. CEUR Workshop Proceed- ings. ",
        "[4] Daniel de Paula Porto, Gabriela Martins de Jesus, Fabiano Cutigi Ferrari, and Sandra Camargo Pinto Ferraz Fabbri. 2021. Initiatives and challenges of using gamification in software engineering: A Systematic Mapping. Journal of Systems and Software 173 (2021), 110870. ",
        "[5] Sebastian Deterding, Miguel Sicart, Lennart Nacke, Kenton OHara, and Dan Dixon. 2011. Gamification. using game-design elements in non-gaming contexts. In CHI11 extended abstracts on human factors in computing systems. 2425\u20132428. ",
        "[6] Ana Fern\u00e1ndez-Saez et al. 2012. A systematic literature review on the quality of UML models. J. Data. Manage 22, 3 (2012), 46\u201370. ",
        "[7] Kleinner Farias et al. 2012. Evaluating the impact of aspects on inconsistency detection effort: a controlled experiment. In International Conference on Model Driven Engineering Languages and Systems. Springer, 219\u2013234. ",
        "[8] Kleinner Frias et al. 2014. Towards a quality model for model composition effort. In 29th Annual ACM Symposium on Applied Computing. 1181\u20131183. ",
        "[9] Kleinner Farias et al. 2015. Evaluating the effort of composing design models: a controlled experiment. Software & Systems Modeling 14, 4 (2015), 1349\u20131365. ",
        "[10] Kleinner Farias et al. 2019. UML2Merge: a UML extension for model merging. IET Software 13, 6 (2019), 575\u2013586. ",
        "[11] Juho Hamari, Jonna Koivisto, and Harri Sarsa. 2014. Does gamification work?\u2013 a literature review of empirical studies on gamification. In 2014 47th Hawaii international conference on system sciences. Ieee, 3025\u20133034. ",
        "[12] Mantas Jurgelaitis, Vaidotas Drungilas, and Lina \u010ceponien\u02d9e. 2018. Gamified Moodle course for teaching UML. Baltic journal of modern computing 6, 2 (2018), 119\u2013127. ",
        "[13] Barbara A Kitchenham and Shari L Pfleeger. 2008. Personal opinion surveys. In Guide to advanced empirical software engineering. Springer, 63\u201392. ",
        "[14] Christian Franz Josef Lange. 2007. Assessing and Improving the Quality of Modeling: A series of Empirical Studies about the UML. (2007). ",
        "[15] Odd Ivar Lindland, Guttorm Sindre, and Arne Solvberg. 1994. Understanding quality in conceptual modeling. IEEE software 11, 2 (1994), 42\u201349. ",
        "[16] Nikola Maranguni\u0107 and Andrina Grani\u0107. 2015. Technology acceptance model: a literature review from 1986 to 2013. Universal access in the information society 14, 1 (2015), 81\u201395. 108",
        "[17] Beatriz Mar\u00edn. 2021. Lessons Learned About Gamification in Software Engineer- ing Education. In Latin American Women and Research Contributions to the IT Field. IGI Global, 174\u2013197. ",
        "[18] Kleinner Oliveira, Alessandro Garcia, and Jon Whittle. 2008. On the quantitative assessment of class model compositions: An exploratory study. 1th ESMDE at MODELS (2008). ",
        "[19] OMG. 2017. UML: Infrastructure specification. https://www.omg.org/spec/UML/2.5.1/PDF. ",
        "[20] Sofia Ouhbi and Nuno Pombo. 2020. Software Engineering Education: Challenges and Perspectives. In IEEE Global Engineering Education Conference. 202\u2013209. ",
        "[21] Oscar Pedreira, F\u00e9lix Garc\u00eda, Nieves Brisaboa, and Mario Piattini. 2015. Gamifica- tion in software engineering\u2013A systematic mapping. Information and software technology 57 (2015), 157\u2013168. ",
        "[22] Pedro Rodrigues, Mauricio Souza, and Eduardo Figueiredo. 2018. Games and gamification in software engineering education: A survey with educators. In 2018 IEEE Frontiers in Education Conference (FIE). IEEE, 1\u20139. ",
        "[23] Kevin Werbach and Dan Hunter. 2012. For the win: How game thinking can revolutionize your business. Wharton digital press. ",
        "[24] Claes Wohlin, Per Runeson, Martin H\u00f6st, Magnus C Ohlsson, Bj\u00f6rn Regnell, and Anders Wessl\u00e9n. 2012. Experimentation in software engineering. Springer Science & Business Media. ",
        "[25] Alfa Yohannis. 2016. Gamification of Software Modelling Learning.. In DS@ MoDELS. 109"
    ]
}